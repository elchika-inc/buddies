#!/bin/bash

# PawMatch - API„Å®CrawlerÈñì„ÅÆD1„Éá„Éº„Çø„Éô„Éº„ÇπÂÖ±ÊúâË®≠ÂÆö„Çπ„ÇØ„É™„Éó„Éà
# wrangler v4ÂØæÂøú
# 
# Ê¶ÇË¶Å: API„Å®Crawler„ÅåÂêå„ÅòD1„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÂèÇÁÖß„Åß„Åç„Çã„Çà„ÅÜ„ÄÅ
#      „É≠„Éº„Ç´„É´ÈñãÁô∫Áí∞Â¢É„Åß„Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØ„Çí‰ΩúÊàê„Åó„Åæ„Åô

# „Ç´„É©„ÉºÂÆöÁæ©
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß Setting up shared D1 database between API and Crawler (wrangler v4)${NC}"
echo "================================================="

# „Éó„É≠„Ç∏„Çß„ÇØ„Éà„É´„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíÂèñÂæó
PROJECT_ROOT="$(cd "$(dirname "$0")/.." && pwd)"
cd "$PROJECT_ROOT"

# API„ÅÆD1„Éá„Ç£„É¨„ÇØ„Éà„É™Ôºà„Éû„Çπ„Çø„Éº„Å®„Å™„Çã„Éá„Ç£„É¨„ÇØ„Éà„É™Ôºâ
# wrangler v4„Åß„ÅÆ„Éë„ÇπÊßãÈÄ†
API_D1_DIR="$PROJECT_ROOT/api/.wrangler/state/v3/d1/miniflare-D1DatabaseObject"
API_DB_FILE="$API_D1_DIR/database.sqlite"

# API„ÅÆD1„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåÂ≠òÂú®„Åô„Çã„ÅãÁ¢∫Ë™ç
if [ ! -d "$API_D1_DIR" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  API D1 directory doesn't exist yet.${NC}"
    echo -e "${YELLOW}   Starting API service to create database...${NC}"
    
    # API„Çí‰∏ÄÊôÇÁöÑ„Å´Ëµ∑Âãï„Åó„Å¶„Éá„Éº„Çø„Éô„Éº„Çπ„Çí‰ΩúÊàê
    cd api
    timeout 5 npm run dev > /dev/null 2>&1 || true
    cd ..
    
    # „Éá„Ç£„É¨„ÇØ„Éà„É™„Åå‰ΩúÊàê„Åï„Çå„Çã„Åæ„ÅßÂ∞ë„ÅóÂæÖ„Å§
    sleep 2
    
    if [ ! -d "$API_D1_DIR" ]; then
        echo -e "${RED}‚ùå Failed to create API D1 directory${NC}"
        echo -e "${YELLOW}   Please run 'cd api && npm run dev' first${NC}"
        exit 1
    fi
fi

echo -e "${GREEN}‚úÖ API D1 directory found${NC}"

# Crawler„ÅÆ„Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØ„Çí‰ΩúÊàê
echo -e "\n${BLUE}üì¶ Setting up Crawler to share API's D1 database...${NC}"

CRAWLER_D1_DIR="$PROJECT_ROOT/crawler/.wrangler/state/v3/d1/miniflare-D1DatabaseObject"
CRAWLER_WRANGLER_DIR="$PROJECT_ROOT/crawler/.wrangler/state/v3/d1"

# .wrangler/state/v3/d1 „Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê
mkdir -p "$CRAWLER_WRANGLER_DIR"

# Êó¢Â≠ò„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™„Åæ„Åü„ÅØ„É™„É≥„ÇØ„ÇíÂâäÈô§
if [ -e "$CRAWLER_D1_DIR" ] || [ -L "$CRAWLER_D1_DIR" ]; then
    echo -e "   Removing existing Crawler D1 directory..."
    rm -rf "$CRAWLER_D1_DIR"
fi

# „Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØ„Çí‰ΩúÊàê
ln -s "$API_D1_DIR" "$CRAWLER_D1_DIR"

if [ -L "$CRAWLER_D1_DIR" ]; then
    echo -e "${GREEN}   ‚úÖ Symlink created: Crawler now shares API's D1 database${NC}"
else
    echo -e "${RED}   ‚ùå Failed to create symlink for Crawler${NC}"
    exit 1
fi

# Ê§úË®º
echo -e "\n${BLUE}üîç Verifying setup (wrangler v4)...${NC}"
echo "================================================="

# wrangler v4„Åß„ÅØ database.sqlite „Åå„Éá„Éï„Ç©„É´„Éà„ÅÆ„Éï„Ç°„Ç§„É´Âêç
if [ -f "$API_DB_FILE" ]; then
    echo -e "${GREEN}‚úÖ Database file found: database.sqlite${NC}"
    
    # „ÉÜ„Éº„Éñ„É´Êï∞„ÇíÁ¢∫Ë™ç
    if command -v sqlite3 &> /dev/null; then
        TABLE_COUNT=$(sqlite3 "$API_DB_FILE" "SELECT COUNT(*) FROM sqlite_master WHERE type='table';" 2>/dev/null || echo 0)
        echo -e "${GREEN}   Tables: $TABLE_COUNT${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  No database file found yet (will be created on first run)${NC}"
fi

# „Ç∑„É≥„Éú„É™„ÉÉ„ÇØ„É™„É≥„ÇØ„ÅÆÁ¢∫Ë™ç
echo -e "\n${BLUE}üìã Database sharing status:${NC}"
if [ -L "$CRAWLER_D1_DIR" ]; then
    echo -e "${GREEN}   ‚úÖ Crawler -> API (linked)${NC}"
    echo -e "${GREEN}   Both services share the same D1 database${NC}"
else
    echo -e "${RED}   ‚ùå Crawler (not linked)${NC}"
    echo -e "${RED}   Services are using separate databases${NC}"
fi

echo -e "\n${GREEN}‚ú® API-Crawler D1 database sharing setup complete! (wrangler v4)${NC}"
echo -e "${BLUE}   Shared database location: api/.wrangler/state/v3/d1/miniflare-D1DatabaseObject${NC}"
echo -e "\n${YELLOW}üìù Next steps:${NC}"
echo -e "   1. Run ${GREEN}npm run dev:all${NC} to start all services"
echo -e "   2. API and Crawler will share the same D1 database"
echo -e "   3. Run migrations with ${GREEN}npm run api:db:migrate${NC}"
echo -e "\n${YELLOW}‚ö†Ô∏è  Important notes:${NC}"
echo -e "   ‚Ä¢ This setup is for local development only"
echo -e "   ‚Ä¢ Production uses the same database_id (b397c3a4-3ee4-4259-b004-6de4488e921f)"
echo -e "   ‚Ä¢ Dispatcher and Converter do not use D1 database"
echo -e "\n${BLUE}üöÄ Testing:${NC}"
echo -e "   1. ${GREEN}cd api && npm run dev${NC} (port: 8787)"
echo -e "   2. ${GREEN}cd crawler && npm run dev${NC} (port: 9787)"
echo -e "   3. Both services should access the same pets and crawler_states tables"