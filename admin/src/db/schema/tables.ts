import { sqliteTable, text, integer, index, real } from 'drizzle-orm/sqlite-core'
import { sql } from 'drizzle-orm'

// ペットテーブル
export const pets = sqliteTable(
  'pets',
  {
    id: text('id').primaryKey(),
    type: text('type').notNull(),
    name: text('name').notNull(),
    breed: text('breed'),
    age: text('age'),
    gender: text('gender'),
    prefecture: text('prefecture'),
    city: text('city'),
    location: text('location'),
    description: text('description'),
    personality: text('personality'),
    medicalInfo: text('medicalInfo'),
    careRequirements: text('careRequirements'),
    goodWith: text('goodWith'),
    healthNotes: text('healthNotes'),
    color: text('color'),
    weight: real('weight'),
    size: text('size'),
    coatLength: text('coatLength'),
    isNeutered: integer('isNeutered').default(0),
    isVaccinated: integer('isVaccinated').default(0),
    vaccinationStatus: text('vaccinationStatus'),
    isFivFelvTested: integer('isFivFelvTested').default(0),
    exerciseLevel: text('exerciseLevel'),
    trainingLevel: text('trainingLevel'),
    socialLevel: text('socialLevel'),
    indoorOutdoor: text('indoorOutdoor'),
    groomingRequirements: text('groomingRequirements'),
    goodWithKids: integer('goodWithKids').default(0),
    goodWithDogs: integer('goodWithDogs').default(0),
    goodWithCats: integer('goodWithCats').default(0),
    apartmentFriendly: integer('apartmentFriendly').default(0),
    needsYard: integer('needsYard').default(0),
    imageUrl: text('imageUrl'),
    additionalImages: text('additionalImages'),
    hasJpeg: integer('hasJpeg').default(0),
    hasWebp: integer('hasWebp').default(0),
    imageCheckedAt: text('imageCheckedAt'),
    screenshotRequestedAt: text('screenshotRequestedAt'),
    screenshotCompletedAt: text('screenshotCompletedAt'),
    shelterName: text('shelterName'),
    shelterContact: text('shelterContact'),
    shelterId: text('shelterId'),
    sourceUrl: text('sourceUrl'),
    sourceId: text('sourceId').default('pet-home'),
    adoptionFee: integer('adoptionFee').default(0),
    rescueDate: text('rescueDate'),
    isPromoted: integer('isPromoted').default(0),
    viewCount: integer('viewCount').default(0),
    likeCount: integer('likeCount').default(0),
    applicationCount: integer('applicationCount').default(0),
    status: text('status').default('available'),
    specialNeeds: integer('specialNeeds').default(0),
    createdAt: text('createdAt').default(sql`CURRENT_TIMESTAMP`),
    updatedAt: text('updatedAt').default(sql`CURRENT_TIMESTAMP`),
  },
  (table) => ({
    typeIdx: index('idx_pets_type').on(table.type),
    prefectureIdx: index('idx_pets_prefecture').on(table.prefecture),
    createdAtIdx: index('idx_pets_createdAt').on(table.createdAt),
  })
)

// APIキーテーブル
export const apiKeys = sqliteTable(
  'api_keys',
  {
    id: text('id').primaryKey(),
    key: text('key').notNull().unique(),
    name: text('name').notNull(),
    type: text('type').notNull(),
    permissions: text('permissions').notNull(),
    rateLimit: integer('rateLimit').notNull().default(100),
    expiresAt: text('expiresAt'),
    createdAt: text('createdAt').notNull().default(sql`CURRENT_TIMESTAMP`),
    updatedAt: text('updatedAt').notNull().default(sql`CURRENT_TIMESTAMP`),
    lastUsedAt: text('lastUsedAt'),
    isActive: integer('isActive').notNull().default(1),
    metadata: text('metadata'),
  },
  (table) => ({
    keyIdx: index('idx_api_keys_key').on(table.key),
    typeIdx: index('idx_api_keys_type').on(table.type),
    isActiveIdx: index('idx_api_keys_isActive').on(table.isActive),
  })
)