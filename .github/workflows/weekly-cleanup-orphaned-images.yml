name: Weekly Cleanup Orphaned Images

on:
  # schedule:
  #   # 毎週日曜日 午前3時 (JST) = 土曜日 18:00 UTC
  #   - cron: '0 18 * * 6'

  # 手動実行のみ
  workflow_dispatch:
    inputs:
      execute:
        description: 'Execute deletion (false = dry run only)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  cleanup-orphaned-images:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm install
          npm install @aws-sdk/client-s3

      - name: Cleanup Orphaned Images
        env:
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          API_URL: ${{ secrets.API_URL || 'https://buddies-api.elchika.app' }}
        run: |
          echo "🧹 Orphaned Images Cleanup"
          echo "========================"
          echo "Mode: ${{ github.event.inputs.execute == 'true' && 'EXECUTE' || 'DRY RUN' }}"
          echo "========================"

          # 実行モードに応じてオプションを設定
          if [ "${{ github.event.inputs.execute || 'false' }}" = "true" ]; then
            echo "⚠️  PRODUCTION MODE: Files will be deleted!"
            node scripts/patch/cleanup-orphaned-images.js --execute
          else
            echo "📋 DRY RUN MODE: No files will be deleted"
            node scripts/patch/cleanup-orphaned-images.js
          fi

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cleanup-report-${{ github.run_number }}
          path: |
            scripts/cleanup-report-*.json
            scripts/patch/cleanup-report-*.json
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "## 🧹 Cleanup Orphaned Images Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: ${{ github.event.inputs.execute == 'true' && 'EXECUTE' || 'DRY RUN' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY

          # レポートファイルが存在する場合、サマリーを表示
          if ls scripts/patch/cleanup-report-*.json 1> /dev/null 2>&1; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📄 Report Summary" >> $GITHUB_STEP_SUMMARY
            REPORT=$(ls -t scripts/patch/cleanup-report-*.json | head -1)
            if [ -f "$REPORT" ]; then
              echo '```json' >> $GITHUB_STEP_SUMMARY
              jq '.summary' "$REPORT" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              
              # 削除予定/削除済みファイル数を表示
              TOTAL_FILES=$(jq '.summary.totalFiles' "$REPORT")
              TOTAL_SIZE_MB=$(jq '.summary.totalSizeMB' "$REPORT")
              echo "" >> $GITHUB_STEP_SUMMARY
              if [ "${{ github.event.inputs.execute }}" = "true" ]; then
                echo "✅ **Deleted**: $TOTAL_FILES files ($TOTAL_SIZE_MB MB)" >> $GITHUB_STEP_SUMMARY
              else
                echo "📋 **Would delete**: $TOTAL_FILES files ($TOTAL_SIZE_MB MB)" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          fi

      # 安全確認: EXECUTE モードの場合は警告
      - name: Safety Check
        if: github.event.inputs.execute == 'true'
        run: |
          echo "⚠️  WARNING: Files have been permanently deleted from R2!"
          echo "Please verify the cleanup report in the artifacts."
