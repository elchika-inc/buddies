name: Deploy to Cloudflare

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['Test and Build']
    types:
      - completed
    branches:
      - main

jobs:
  deploy-workers:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Deploy Workers

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Setup Cloudflare resources
        run: |
          cd api
          npx wrangler d1 migrations apply pawmatch-db --remote || true
          npx wrangler queues create pawmatch-crawler-queue || true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy Workers
        run: npm run deploy:workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy-frontend:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Deploy Frontend (${{ matrix.pet-type }})
    strategy:
      matrix:
        pet-type: [dog, cat]
        include:
          - pet-type: dog
            app-name: DogMatch
            app-url: https://dogmatch.elchika.app
          - pet-type: cat
            app-name: CatMatch
            app-url: https://catmatch.elchika.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        if: github.event_name != 'workflow_dispatch'
        uses: actions/download-artifact@v4
        with:
          name: frontend-${{ matrix.pet-type }}-build
          path: frontend/.next
        continue-on-error: true

      - name: Build if artifacts not available
        env:
          NEXT_PUBLIC_PET_TYPE: ${{ matrix.pet-type }}
          NEXT_PUBLIC_API_URL: https://pawmatch-api.elchika.app
          NEXT_PUBLIC_API_KEY: b80f83e113c5463a811607a30afd133dbb0b3c39a0eb41ebac716e29eeda27fb
          NEXT_PUBLIC_USE_API: true
          NEXT_PUBLIC_APP_NAME: ${{ matrix.app-name }}
          NEXT_PUBLIC_APP_URL: ${{ matrix.app-url }}
          NEXT_TELEMETRY_DISABLED: 1
          NODE_OPTIONS: --max-old-space-size=4096
        run: |
          if [ ! -d "frontend/.next" ]; then
            echo "Build artifacts not found, building frontend for ${{ matrix.pet-type }}..."
            npm run build -w @pawmatch/frontend
          fi

      - name: Deploy to Cloudflare Pages
        run: npm run deploy:${{ matrix.pet-type }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
