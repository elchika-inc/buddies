name: Automated Image Pipeline

on:
  # Dispatcher経由の呼び出しに対応
  workflow_dispatch:
    inputs:
      batch_data:
        description: 'JSON batch data from Dispatcher'
        required: false
        type: string
      batch_id:
        description: 'Batch ID from Dispatcher'
        required: false
        type: string
      limit:
        description: 'Number of pets to process'
        required: false
        default: '10'
        type: string

jobs:
  fetch-and-process-images:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
            node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install dependencies
        run: |
          npm install
          npm install playwright sharp @aws-sdk/client-s3
      
      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps
      
      - name: Prepare pets data
        id: prepare-pets
        continue-on-error: true
        env:
          API_URL: ${{ secrets.API_URL || 'https://pawmatch-api.elchika.app' }}
        run: |
          # Dispatcher経由の場合
          if [ -n "${{ github.event.inputs.batch_data }}" ]; then
            echo 'Processing data from Dispatcher...'
            echo '${{ github.event.inputs.batch_data }}' > pets_to_process.json
            PET_COUNT=$(echo '${{ github.event.inputs.batch_data }}' | jq 'length')
          else
            # 手動実行（APIから取得）
            echo 'Fetching data from API...'
            PETS_JSON=$(curl -s "${API_URL}/api/stats" | \
              jq '[.data.missingImages[0:${{ github.event.inputs.limit || 10 }}] | 
                  .[] | {id: .id, name: .name, sourceUrl: .sourceUrl, type: .type}]')
            echo "$PETS_JSON" > pets_to_process.json
            PET_COUNT=$(echo "$PETS_JSON" | jq 'length')
          fi
          
          echo "pet_count=${PET_COUNT}" >> $GITHUB_OUTPUT
          echo "Found ${PET_COUNT} pets to process"
      
      - name: Process images if pets found
        if: steps.prepare-pets.outputs.pet_count > 0
        continue-on-error: true
        env:
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
        run: |
          # スクリーンショット取得とWebP変換を実行
          node scripts/dispatcher/automated-screenshot-converter.js \
            --batch-file="pets_to_process.json" \
            --batch-id="${{ github.event.inputs.batch_id || format('auto-{0}', github.run_id) }}"
      
      - name: Update database with image URLs
        if: steps.prepare-pets.outputs.pet_count > 0
        continue-on-error: true
        env:
          API_URL: ${{ secrets.API_URL || 'https://pawmatch-api.elchika.app' }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          # 処理結果をAPIに送信してDBを更新
          if [ -f "logs/results.json" ]; then
            # API_KEYが設定されている場合のみAuthorizationヘッダーを追加
            if [ -n "$API_KEY" ]; then
              curl -X POST "${API_URL}/api/admin/update-images" \
                -H "Authorization: Bearer ${API_KEY}" \
                -H "Content-Type: application/json" \
                -d @logs/results.json
            else
              curl -X POST "${API_URL}/api/admin/update-images" \
                -H "Content-Type: application/json" \
                -d @logs/results.json
            fi
          fi
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: image-pipeline-logs-${{ github.run_id }}
          path: |
            logs/
            pets_to_process.json
          retention-days: 7
      
      - name: Notify completion
        if: steps.prepare-pets.outputs.pet_count > 0
        run: |
          echo "✅ Processed ${{ steps.prepare-pets.outputs.pet_count }} pets"
          echo "📸 Screenshots captured and converted to WebP"
          echo "☁️ Images uploaded to R2 storage"