name: Pet Screenshot Capture

on:
  workflow_dispatch:
    inputs:
      pets_batch:
        description: 'JSON array of pet objects to process'
        required: true
        type: string
      batch_id:
        description: 'Unique batch identifier'
        required: false
        type: string
        default: 'manual'

jobs:
  capture-screenshots:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    outputs:
      results: ${{ steps.capture.outputs.results }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install dependencies
        working-directory: ./converter
        run: |
          npm ci
          npm install playwright sharp @aws-sdk/client-s3
      
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./converter
        run: npx playwright install chromium --with-deps
      
      - name: Install Playwright dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        working-directory: ./converter
        run: npx playwright install-deps chromium
      
      - name: Capture screenshots and upload to R2
        id: capture
        working-directory: ./converter
        env:
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          BATCH_ID: ${{ github.event.inputs.batch_id }}
        run: |
          node scripts/github-actions-screenshot.js \
            --batch='${{ github.event.inputs.pets_batch }}' \
            --batch-id='${{ github.event.inputs.batch_id }}'
      
      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-logs-${{ github.event.inputs.batch_id }}
          path: converter/logs/
          retention-days: 7