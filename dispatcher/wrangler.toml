name = "pawmatch-dispatcher"
main = "src/index.ts"
compatibility_date = "2024-01-01"
compatibility_flags = ["nodejs_compat"]

# 環境変数
[vars]
GITHUB_OWNER = "elchika-inc"
GITHUB_REPO = "pawmatch"
WORKFLOW_FILE = "automated-image-pipeline.yml"
API_URL = "https://pawmatch-api.elchika.app"


# Queue設定
[[queues.producers]]
binding = "PAWMATCH_DISPATCH_QUEUE"
queue = "pawmatch-dispatch-queue"

[[queues.consumers]]
queue = "pawmatch-dispatch-queue"
max_batch_size = 10
max_batch_timeout = 30
max_retries = 3
dead_letter_queue = "pawmatch-dispatch-dlq"

# Dead Letter Queue設定
[[queues.producers]]
binding = "PAWMATCH_DISPATCH_DLQ"
queue = "pawmatch-dispatch-dlq"

# R2バケット設定（オプション: R2から画像削除する場合）
[[r2_buckets]]
binding = "R2_BUCKET"
bucket_name = "pawmatch-images"

# Cron Trigger設定
[triggers]
crons = [
  "15 */4 * * *",  # Crawlerの15分後、4時間ごと（スクリーンショット処理）
  "0 2 * * *"      # 毎日深夜2時（データクリーンアップ）
]

# Observability設定
[observability.logs]
enabled = true

# 開発環境設定
[env.development]
vars = { API_URL = "http://localhost:8787" }

# 開発サーバーポート設定
[dev]
port = 9788
inspector_port = 10231